{% if standalone is not defined %}
{% set standalone = true %}
{% endif %}

{% if standalone %}
import mlipx
import zntrack
from models import MODELS
import os

project = zntrack.Project()
{% endif %}

{% if use_janus == True %}
use_janus = True
{% else %}
use_janus = False
{% endif %}

{% if all_images == True %}
all_images = True
{% else %}
all_images = False
{% endif %}



DATAPATH = {{ neb_datapath }}
print(f"Using data path: {DATAPATH}")


neb_node_dict = {}
neb_node_list = []

for data_path in DATAPATH:
    filename = os.path.basename(data_path) # e.g. '64.xyz'
    stem = os.path.splitext(filename)[0]  # e.g. '64'

    for model_name, model in MODELS.items():
        # Use a unique group to avoid overwriting
        with project.group(model_name, "neb", stem):
            node = mlipx.NEB2(
                data_path=data_path,
                model=model,
                n_images=30,
                k=1,
                relax=True,
                optimizer="NEBOptimizer",
                optimizer_fallback="FIRE",
                n_steps=1000,
                fmax=0.05,
                use_janus=use_janus,
            )
            neb_node_dict[model_name] = node
            neb_node_list.append(node)


{% if standalone %}
project.build()
{% endif %}