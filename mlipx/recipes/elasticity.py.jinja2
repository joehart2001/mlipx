{% if standalone is not defined %}
{% set standalone = true %}
{% endif %}

{% if standalone %}
import mlipx
import zntrack
from models import MODELS
project = zntrack.Project()
{% endif %}


{% if small %}
n_materials = 100
{% elif medium %}
n_materials = 1000

{% elif n_materials_elasticity %}
n_materials = {{ n_materials_elasticity }}
{% else %}
n_materials = None # none means all
print(f"Elasticity benchmark on whole dataset (12,122 materials)")
{% endif %}

{% if n_jobs_elasticity %}
n_jobs = {{ n_jobs_elasticity }}
if n_jobs == 1:
    print("No parallelisation, running in serial")
else:
    print(f"Parallelisation over {n_jobs} jobs")

{% else %}
n_jobs = -1
print(f"Parallelisation over {n_jobs} jobs")
{% endif %}

{% if relax_deformed_structures %}
relax_deformed_structures = True
{% else %}
relax_deformed_structures = False
{% endif %}

print(f"Elasticity benchmark on {n_materials} mp-ids")

elasticity_dict = {}
elasticity_list = []

for model_name, model in MODELS.items():
    with project.group(model_name):
        benchmark = mlipx.Elasticity(
            model =model,
            model_name=model_name,
            n_materials=n_materials,
            n_jobs=n_jobs,
            relax_deformed_structures=relax_deformed_structures,
        )
        elasticity_dict[model_name] = benchmark
        elasticity_list.append(benchmark)



{% if standalone %}
project.build()
{% endif %}