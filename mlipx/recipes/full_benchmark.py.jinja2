import mlipx
import zntrack
from models import MODELS
from pathlib import Path


{% if standalone is not defined %}
{% set standalone = true %}
{% endif %}

{% if standalone %}
import mlipx
import zntrack
from models import MODELS
from pathlib import Path
import json
from mlipx.benchmark_download_utils import get_benchmark_data
from mlipx.phonons_utils import download_alex_parallel
from mlipx.benchmark_download_utils import BENCHMARK_DATA_DIR
from ase.data import chemical_symbols

project = zntrack.Project()
{% endif %}



{% set standalone = false %}
{% include "bulk_crystal_benchmark.py.jinja2" %}
{% include "molecular_crystal_benchmark.py.jinja2" %}
{% include "molecular_benchmark.py.jinja2" %}
{% include "further_applications.py.jinja2" %}

{% include "further_applications_NEB.py.jinja2" %}
{% include "surface_benchmark.py.jinja2" %}
{% include "physicality_benchmark.py.jinja2" %}
{% include "supramolecular_complex_benchmark.py.jinja2" %}
{% include "MOF_benchmark.py.jinja2" %}

with project.group("full-benchmark"):
    full_benchmark = mlipx.FullBenchmark(
        bulk_crystal_benchmark=bulk_crystal_benchmark,
        mol_crystal_benchmark=mol_benchmark,
        mol_benchmark=mol_benchmark,
        further_apps_benchmark=further_apps_benchmark,
        
    )


project.build()