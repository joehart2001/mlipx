import mlipx
import zntrack

from models import MODELS

project = zntrack.Project()

frames = []
{% if datapath %}
with project.group("initialize"):
    for path in {{ datapath }}:
        frames.append(mlipx.LoadDataFile(path=path))
{% endif %}{% if material_ids %}
with project.group("initialize"):
    for material_id in {{ material_ids }}:
        frames.append(mlipx.MPRester(search_kwargs={"material_ids": [material_id]}))
{% endif %}{% if smiles %}
with project.group("initialize"):
    for smiles in {{ smiles }}:
        frames.append(mlipx.Smiles2Conformers(smiles=smiles, num_confs=1))
{% endif %}


{% if steps %}
steps = {{ steps }}
{% else %}
steps = 1000
{% endif %}

{% if temperature %}
temperature = {{ temperature }}
{% else %}
temperature = 300
{% endif %}

thermostat = mlipx.LangevinConfig(timestep=1, temperature=temperature, friction=0.05)
#force_check = mlipx.MaximumForceObserver(f_max=100)
#t_ramp = mlipx.TemperatureRampModifier(end_temperature=400, total_steps=100)


print(f"Running MD for {steps} steps at {temperature} K with {len(frames)} initial configurations.")

md_dict = {}
md_list = []

for model_name, model in MODELS.items():
    for idx, data in enumerate(frames):
        with project.group(model_name, f"config-{str(idx)}"):
            md = mlipx.MolecularDynamics(
                model=model,
                thermostat=thermostat,
                data=data.frames,
                #observers=[force_check],
                #modifiers=[t_ramp],
                steps=steps,
                print_energy_every=1000,
            )
            if len(frames) == 1:
                md_dict[model_name] = md
            else:
                md_dict[f"{model_name}_{idx}"] = md
            md_list.append(md)

project.build()
